{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayAlbums() {\n  _s();\n  //const [albums, setAlbums] = useState([]);\n\n  //generate random number\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  //fetch album\n  function getRandomAlbum(proxy_url, num) {\n    console.log(proxy_url + `${num}`);\n    try {\n      fetch(proxy_url + `${num}`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'crossDomain': true\n        }\n      }).then(response => response.json()).then(albumData => {\n        console.log(albumData);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getRandomAlbum(process.env.REACT_APP_API_URL, getRandomInt(150));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(DisplayAlbums, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DisplayAlbums;\nvar _c;\n$RefreshReg$(_c, \"DisplayAlbums\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","DisplayAlbums","_s","getRandomInt","max","Math","floor","random","getRandomAlbum","proxy_url","num","console","log","fetch","headers","then","response","json","albumData","err","process","env","REACT_APP_API_URL","_c","$RefreshReg$"],"sources":["/home/jac/web_projects/album-recommendation/src/components/DisplayAlbums.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function DisplayAlbums(){\n    //const [albums, setAlbums] = useState([]);\n\n    //generate random number\n    function getRandomInt(max){\n        return Math.floor(Math.random() * max);\n    }\n\n    //fetch album\n    function getRandomAlbum(proxy_url, num){\n        \n        console.log(proxy_url + `${num}`);\n        try {\n            fetch(proxy_url + `${num}`, {\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'crossDomain': true\n                }\n            })\n            .then(response => response.json())\n            .then(albumData => {\n                console.log(albumData);\n            });\n        } catch(err)\n        { \n            console.log(err) \n        }\n    }\n\n    useEffect(() => {\n        getRandomAlbum(process.env.REACT_APP_API_URL, getRandomInt(150));\n    }, [])\n\n    return (\n        <>\n        </>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACnC;;EAEA;EACA,SAASC,YAAYA,CAACC,GAAG,EAAC;IACtB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;EAC1C;;EAEA;EACA,SAASI,cAAcA,CAACC,SAAS,EAAEC,GAAG,EAAC;IAEnCC,OAAO,CAACC,GAAG,CAACH,SAAS,GAAI,GAAEC,GAAI,EAAC,CAAC;IACjC,IAAI;MACAG,KAAK,CAACJ,SAAS,GAAI,GAAEC,GAAI,EAAC,EAAE;QACxBI,OAAO,EAAE;UACL,QAAQ,EAAG,kBAAkB;UAC7B,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAE;QACnB;MACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,SAAS,IAAI;QACfP,OAAO,CAACC,GAAG,CAACM,SAAS,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,CAAC,OAAMC,GAAG,EACX;MACIR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;IACpB;EACJ;EAEAxB,SAAS,CAAC,MAAM;IACZa,cAAc,CAACY,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAEnB,YAAY,CAAC,GAAG,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIH,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEX;AAACI,EAAA,CAtCuBD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}